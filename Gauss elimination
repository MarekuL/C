#include <iostream>
#include <iomanip>
using namespace std;
const int MatOrd = 3;


int main()

{
    double d, s, MaxElem;
    double Matrix1[MatOrd][MatOrd] = { 0 };
    double Matrix[MatOrd][MatOrd] = { 0 };
    double FreeMem[MatOrd] = { 0 };
    double FreeMem1[MatOrd] = { 0 };
    double x[MatOrd] = { 0 };
    double F[MatOrd] = { 0 };
    cout << "Enter Matrix" << endl;
    for (int i = 0; i < MatOrd; i++)
    {

        for (int j = 0; j < MatOrd; j++)
        {
            cin >> Matrix[i][j];
        }
    }
    for (int i = 0; i < MatOrd; i++)
    {

        for (int j = 0; j < MatOrd; j++)
        {
            Matrix1[i][j] = Matrix[i][j];
        }
    }
    cout << "Enter free members" << endl;
    for (int i = 0; i < MatOrd; i++)
    {
        cin >> FreeMem[i];
    }
    for (int i = 0; i < MatOrd; i++)
    {
        FreeMem1[i] = FreeMem[i];
    }
    for (int i = 1; i < MatOrd; i++)
    {
        MaxElem = Matrix[0][0];
        if (Matrix[i][0] > MaxElem)
        {
            for (int j = 0; j < MatOrd; j++)
            {
                swap(Matrix[0][j], Matrix[i][j]);
                swap(FreeMem[0], FreeMem[i]);
            }

        }

    }
    Matrix1[0][0] = Matrix[0][0] / Matrix[0][0];
    Matrix1[1][1] = Matrix[1][1] / Matrix[1][1];
    Matrix1[2][2] = Matrix[2][2] / Matrix[2][2];
    for (int k = 0; k < MatOrd; k++)

    {

        for (int j = k + 1; j < MatOrd; j++)

        {

            d = Matrix[j][k] / Matrix[k][k];

            for (int i = k; i < MatOrd; i++)

            {

                Matrix[j][i] = Matrix[j][i] - d * Matrix[k][i];

            }

            FreeMem[j] = FreeMem[j] - d * FreeMem[k];

        }

    }
    cout << "Our Matrix: " << endl;
    for (int k = 0; k < MatOrd; k++)

    {
        for (int j = 0; j < MatOrd; j++)

        {
            cout << setw(8) << Matrix1[k][j];
        }
        cout<<endl;
    }

    for (int k = MatOrd - 1; k >= 0; k--)

    {

        d = 0;

        for (int j = k + 1; j < MatOrd; j++)

        {

            s = Matrix[k][j] * x[j];

            d = d + s;

        }

        x[k] = (FreeMem[k] - d) / Matrix[k][k];

    }
    cout << endl << "Answers = ";
    for (int i = 0; i < MatOrd; i++)
        cout << x[i] << "  ";


    for (int i = 0; i < MatOrd; i++)
        for (int j = 0; j < MatOrd; j++)
            F[i] += Matrix1[i][j] * x[j];

    for (int i = 0; i < MatOrd; i++)
        F[i] -= FreeMem1[i];



    cout << endl;
    for (int i = 0; i < MatOrd; i++)
        cout << F[i] << "  ";


    return 0;

}
